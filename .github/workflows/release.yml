name: release

on:
  workflow_dispatch: null
  push:
    branches:
      - main

env:
  PY_COLORS: "1"
  REGISTRY: ghcr.io
  IMAGE_NAME: regro/conda-forge-tick

concurrency:
  group: release
  cancel-in-progress: false

jobs:
  release:
    name: release
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: mamba-org/setup-micromamba@4b9113af4fba0e9e1124b252dd6497a419e7396d # v1.11.0
        with:
          environment-file: conda-lock.yml
          environment-name: cf-scripts
          condarc-file: autotick-bot/condarc

      - name: compute next version
        id: version
        run: |
          echo "current version: "$(git tag --sort=committerdate | tail -1)
          NEXT=$(python autotick-bot/compute_next_version.py)
          echo "next version: ${NEXT}"
          echo "NEXT=${NEXT}" >> "$GITHUB_OUTPUT"

      - name: log into ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build docker metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{ steps.version.outputs.NEXT }}
            type=raw,value=latest

      - name: build and push image
        uses: docker/build-push-action@b32b51a8eda65d6793cd0494a773d4f6bcef32dc # v6.11.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: tag and release
        run: |
          python autotick-bot/release.py "${{ steps.version.outputs.NEXT }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
